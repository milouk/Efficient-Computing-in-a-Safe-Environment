# This is the build file for project "osbench"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule c_COMPILER
 command = ccache cc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out.

rule c_PCH
 command = ccache cc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.


# Rules for linking.

rule STATIC_LINKER
 command =  rm -f $out && gcc-ar $LINK_ARGS $out $in
 description = Linking static target $out.

rule c_LINKER
 command = ccache cc $ARGS -o $out $in $LINK_ARGS  $aliasing
 description = Linking target $out.


rule SHSYM
 command = /usr/bin/python3 /usr/bin/meson --internal symbolextractor $in $out $CROSS
 restat = 1
 description = Generating symbol file $out.

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule CUSTOM_COMMAND_DEP
 command = $COMMAND
 description = $DESC
 deps = gcc
 depfile = $DEPFILE
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/python3 /usr/bin/meson --internal regenerate /home/sgeorgiou/GitHub/efficient_computering_in_safe_environments/mitigations/osbench/osbench-master/src /home/sgeorgiou/GitHub/efficient_computering_in_safe_environments/mitigations/osbench/osbench-master/out --backend ninja
 description = Regenerating build files.
 generator = 1


# Phony build target, always out of date
build PHONY: phony

# Build rules for targets

build common/common@@common@sta/time.c.o: c_COMPILER ../src/common/time.c
 DEPFILE = common/common@@common@sta/time.c.o.d
 ARGS = -Icommon/common@@common@sta -Icommon -I../src/common -I. -I../src/ -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O3 -fPIC

build common/libcommon.a: STATIC_LINKER common/common@@common@sta/time.c.o
 LINK_ARGS = csrD

build create_threads@exe/create_threads.c.o: c_COMPILER ../src/create_threads.c
 DEPFILE = create_threads@exe/create_threads.c.o.d
 ARGS = -Icreate_threads@exe -I. -I../src -I../src/ -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O3 -pthread

build create_threads: c_LINKER create_threads@exe/create_threads.c.o | common/libcommon.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,-O1 -Wl,--start-group common/libcommon.a -Wl,--end-group -pthread

build create_processes@exe/create_processes.c.o: c_COMPILER ../src/create_processes.c
 DEPFILE = create_processes@exe/create_processes.c.o.d
 ARGS = -Icreate_processes@exe -I. -I../src -I../src/ -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O3

build create_processes: c_LINKER create_processes@exe/create_processes.c.o | common/libcommon.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,-O1 -Wl,--start-group common/libcommon.a -Wl,--end-group

build launch_programs@exe/launch_programs.c.o: c_COMPILER ../src/launch_programs.c
 DEPFILE = launch_programs@exe/launch_programs.c.o.d
 ARGS = -Ilaunch_programs@exe -I. -I../src -I../src/ -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O3

build launch_programs: c_LINKER launch_programs@exe/launch_programs.c.o | common/libcommon.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,-O1 -Wl,--start-group common/libcommon.a -Wl,--end-group

build create_files@exe/create_files.c.o: c_COMPILER ../src/create_files.c
 DEPFILE = create_files@exe/create_files.c.o.d
 ARGS = -Icreate_files@exe -I. -I../src -I../src/ -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O3

build create_files: c_LINKER create_files@exe/create_files.c.o | /usr/lib64/libm.so common/libcommon.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,-O1 -Wl,--start-group common/libcommon.a -lm -Wl,--end-group

build mem_alloc@exe/mem_alloc.c.o: c_COMPILER ../src/mem_alloc.c
 DEPFILE = mem_alloc@exe/mem_alloc.c.o.d
 ARGS = -Imem_alloc@exe -I. -I../src -I../src/ -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O3

build mem_alloc: c_LINKER mem_alloc@exe/mem_alloc.c.o | common/libcommon.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,-O1 -Wl,--start-group common/libcommon.a -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/python3 -u /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/python3 -u /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/python3 /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/python3 /usr/bin/meson --internal dist /home/sgeorgiou/GitHub/efficient_computering_in_safe_environments/mitigations/osbench/osbench-master/src /home/sgeorgiou/GitHub/efficient_computering_in_safe_environments/mitigations/osbench/osbench-master/out /usr/bin/python3 /usr/bin/meson
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/python3 /usr/bin/meson --internal scanbuild /home/sgeorgiou/GitHub/efficient_computering_in_safe_environments/mitigations/osbench/osbench-master/src /home/sgeorgiou/GitHub/efficient_computering_in_safe_environments/mitigations/osbench/osbench-master/out /usr/bin/python3 /usr/bin/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/python3 /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony common/libcommon.a create_threads create_processes launch_programs create_files mem_alloc

default all

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = ninja -t clean
 description = Cleaning.

build build.ninja: REGENERATE_BUILD ../src/meson.build ../src/common/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../src/meson.build ../src/common/meson.build meson-private/coredata.dat: phony 

